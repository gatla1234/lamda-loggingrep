log = .
log4j.rootLogger = INFO, stdout

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%m %x%n


#
# Simple CloudWatch Application Logger (uses a human readable layout)
#
log4j.logger.DTCC_CLOUDWATCH_LOGGER = DEBUG, DTCC_CLOUDWATCH_APPENDER
log4j.additivity.DTCC_CLOUDWATCH_LOGGER=false
log4j.appender.DTCC_CLOUDWATCH_APPENDER=com.dtcc.ecd.awslogutils.log4j.CloudWatchAppender
log4j.appender.DTCC_CLOUDWATCH_APPENDER.layout=com.dtcc.ecd.awslogutils.log4j.DTCCPatternLayout
log4j.appender.DTCC_CLOUDWATCH_APPENDER.layout.conversionPattern=[%U] [%p] %m %Y

#
# Standard LAMBDA LOGGER (creates a traditional LAMBDA Logger)
#

log4j.logger.DEFAULT_LAMBDA_LOGGER = DEBUG, LAMBDA_LOG_APPENDER
log4j.additivity.DEFAULT_LAMBDA_LOGGER=false
log4j.appender.LAMBDA_LOG_APPENDER=com.amazonaws.services.lambda.runtime.log4j.LambdaAppender
log4j.appender.LAMBDA_LOG_APPENDER.layout=com.dtcc.ecd.awslogutils.log4j.DTCCPatternLayout
log4j.appender.LAMBDA_LOG_APPENDER.layout.conversionPattern=[%U] [%p] %m %Y


#
# AWS Client Tracing
#
log4j.logger.com.amazonaws=off
log4j.logger.org.apache.http.wire=off